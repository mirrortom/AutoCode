using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using @Model.nameSpace@(".Entity");
using @Model.nameSpace@(".DBM");

@{ 
    string entityListType = Model.entityName + "[]";
}
namespace @Model.nameSpace@(".DAL")
{
    public class @Model.className
    {   
        /// <summary>
        /// 数据(分页):查找出符合条件的多个记录
        /// </summary>
        /// <param name="para">查询条件参数</param>
        /// <returns></returns>
        public static @entityListType List(@Model.entityName para)
        {
            StringBuilder sb = new StringBuilder("1=1");
            string where = sb.ToString();
            string sql = $@@"SELECT @Model.queryFields
                            FROM @Model.tableName
                            WHERE {where}
                            ORDER BY ctime DESC
                            OFFSET @@OffSetRows ROWS FETCH NEXT @@PageSize ROWS ONLY";
            string sqlcount = $@@"SELECT COUNT(id) FROM @Model.tableName WHERE {where}";
            //
            SQLServer db = new SQLServer();
            // 总条数(如果为0无需再查询)
            int count=0;
            var listcount = db.ExecuteScalar<@Model.entityName>(sqlcount, para);
            if (listcount == null || !int.TryParse(listcount.ToString(),out count) || count==0)
                return null;
            para.ListCount = count;
            // 数据列表
            @entityListType data = db.ExecuteQuery<@Model.entityName, @Model.entityName>(sql, para);
            return data;
        }

        /// <summary>
        /// 数据:查找出符合条件的所有记录
        /// </summary>
        /// <param name="para">查询条件参数</param>
        /// <returns></returns>
        public static @entityListType All(@Model.entityName para)
        {
            StringBuilder sb = new StringBuilder("1=1");
            string where = sb.ToString();
            string sql = $@@"SELECT @Model.queryFields
                            FROM @Model.tableName
                            WHERE {where}
                            ORDER BY ctime DESC";
            //
            SQLServer db = new SQLServer();
            // 数据列表
            @entityListType data = db.ExecuteQuery<@Model.entityName, @Model.entityName>(sql, para);
            return data ?? null;
        }

        /// <summary>
        /// 一个:查找指定ID(主键)的一个记录
        /// </summary>
        /// <param name="id">主键ID</param>
        /// <returns></returns>
        public static @Model.entityName GetById(@Model.entityName para)
        {
            StringBuilder sb = new StringBuilder("1=1");
            string where = sb.ToString();
            string sql = $@@"SELECT @Model.queryFields
                            FROM @Model.tableName
                            WHERE id=@@id and {where}";
            //
            SQLServer db = new SQLServer();
            // 数据列表
            @entityListType data = db.ExecuteQuery<@Model.entityName>(sql, para.Id,1);
            return data?[0];
        }

        /// <summary>
        /// 添加一个:增加一个新的记录.返回受影响行数
        /// </summary>
        /// <param name="para">新记录实体</param>
        /// <returns></returns>
        public static int Add(@Model.entityName para)
        {
            string insert = @@"INSERT INTO @Model.tableName (@Model.queryFields)";
            SQLServer db = new SQLServer();
            return db.Insert<@Model.entityName>(insert, para);
        }

        /// <summary>
        /// 更新一个:查找指定ID(主键)的一个记录,然后更新之.返回受影响行数
        /// </summary>
        /// <param name="para">新记录实体</param>
        /// <returns></returns>
        public static int UpdateById(@Model.entityName para)
        {
            StringBuilder sb = new StringBuilder("1=1");
            string where = sb.ToString();
            string update = $@@"UPDATE @Model.tableName (@Model.queryFields) WHERE id=@@id and {where}";
            SQLServer db = new SQLServer();
            return db.Update<@Model.entityName>(update, para);
        }

        /// <summary>
        /// 查询是否存在指定字段的值的记录
        /// </summary>
        /// <param name="fieldName"></param>
        /// <param name="fieldVal"></param>
        /// <returns></returns>
        internal static bool ExistByField(string fieldName, string fieldVal)
        {
            string sql = $@@"SELECT COUNT(id) FROM @Model.tableName WHERE {fieldName}=@@fieldVal";
            SQLServer db = new SQLServer();
            object re = db.ExecuteScalar(sql, fieldVal, 1);
            if (re == null) return false;
            return long.Parse(re.ToString()) > 0;
        }
    }
}
