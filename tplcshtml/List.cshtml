@{
  string divListId = Model.tableName + "list";
}
<div class="page">
  <div class="mg-tb-20">
    <p class="article-title warning">搜索 <a id="clearSearchBtn" class="btn sm gray mg-l-10" searchFlag="0">清除搜索</a></p>
  </div>
  <div id="@divListId"></div>
  <hr class="line" />
  <p class="text-center">-- 到底了 --</p>
</div>
<script>
  ((win) => {
    // help
    let post = win.ns.post;
    let get = win.ns.get;
    let cfg = win.ns.cfg;
    let router = win.ns.router;

    //===========
    // page init
    //===========
    list();
    clearSearchBtn_click();

    //===========
    // function
    //===========

    // table data
    function list() {
      post(cfg.ApiAssetList, {})
        .then(data => {
          if (data.errcode == 200) {
            createTable(data.list);
            createSearch(data.list);
            refreshTableBySearchBtn();
          } else if (data.errmsg) {
            $('#@divListId').html(`<p class="text-warning">${data.errmsg}</p>`);
          } else
            throw new Error(data);
        })
        .catch(err => {
          $('#@divListId').html(`<p class="text-danger">${err.message}</p>`);
        });
    }
    function createTable(data) {
      let span = (txt, cls, isBlock = true) => {
        return `<span class="${cls || ''} ${isBlock == true ? "d-block" : ""}">${txt}</span>`;
      };
      // tab header
      let th = '@Raw(Model.tableDataHeads)';
      // rows
      let rows = '';
      for (var i = 0, len = data.length; i < len; i++) {
        let item = data[i];
        let cols = '@Raw(Model.tableDataCols)';
        // 支持的搜索条件添加在tr元素上
        rows += `<tr>${cols}</tr>`;
      }
      let table = `<table class="table border-all hover">${th}${rows}</table>`;
      $('#@divListId').empty().html(table);
      //
      opBind();
    }
    // 操作事件绑定
    function opBind() {

    }
    // =====
    // 搜索
    // =====
    // 生成搜索条件,搜索是前端的实现.根据资产列表数据生成搜索条件.
    // refresh=true 强制重新生成标题列表
    // 要加新的搜索方式时,在此方法加.(具体参考已实现的搜索函数,注意:数据表格tr元素上添加匹配条件)
    function createSearch(data, refresh) {
      // 为了在切换页面时,保留上次的搜索条件和结果,判断是否搜索过.没有搜索过才生成
      if (searchFlag() == 1 && refresh != true) return;
    }

    // 根据搜索按钮状态,显示资产表格内容
    function refreshTableBySearchBtn() {
      // 没有一个搜索选中按钮(或者搜索区数据还没有生成),显示全部
    }

    // 搜索区域使用标志,1=已经使用过搜索 0=未使用过.不传则返回标志.
    function searchFlag(flag) {
      if (flag == undefined) {
        return $('#clearSearchBtn').prop('searchFlag');
      }
      $('#clearSearchBtn').prop('searchFlag', flag);
    }
    // 清空(恢复)搜索按钮
    function clearSearchBtn_click() {
      $('#clearSearchBtn').click(() => {
        // 显示所有资产
        $('#@divListId tr').removeClass('d-none');
        // 重新获取数据,生成搜索
        list();
        // 按钮属性 searchFlag 0=未使用过搜索 1=已经使用过搜索
        searchFlag(0);
      })
    }
  })(window);
</script>